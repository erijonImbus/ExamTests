name: Robot Framework Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 10 * * 1-5"  # Runs 10AM, Monday through Friday
  workflow_dispatch:
    inputs:
      TAGS:
        description: 'Tags to include in the tests'
        required: false
        default: ''
      EXCLUDE_TAGS:
        description: 'Tags to exclude from the tests'
        required: false
        default: ''
      BROWSER:
        description: 'Select the browser to run tests on'
        required: true
        type: choice
        options:
          - headlesschrome
          - firefox
          - edge
        default: headlesschrome

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      IMAGE: robotframework-docker-test
      VERSION: 1.0
      BROWSER: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.BROWSER || 'headlesschrome' }}
      TAGS: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.TAGS || '' }}
      EXCLUDE_TAGS: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.EXCLUDE_TAGS || '' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Docker
        run: |
          echo "Checking Docker installation..."
          docker version

      - name: Build Docker Image
        run: |
          echo "Building Docker image from Dockerfile..."
          docker build --no-cache -t ${{ env.IMAGE }}:${{ env.VERSION }} -f .github/workflows/Dockerfile .

      - name: Run Tests - Dryrun
        run: |
          echo "Running tests in dryrun mode using image ${{ env.IMAGE }}:${{ env.VERSION }}..."

          CMD="robot --dryrun --outputdir /app/output/dryrun"

          if [[ -n "${{ env.TAGS }}" ]]; then
            CMD="$CMD --include ${{ env.TAGS }}"
          fi

          if [[ -n "${{ env.EXCLUDE_TAGS }}" ]]; then
            CMD="$CMD --exclude ${{ env.EXCLUDE_TAGS }}"
          fi

          CMD="$CMD /app"
          echo "Executing dryrun command: $CMD"

          docker run --rm -v ${PWD}:/app ${{ env.IMAGE }}:${{ env.VERSION }} bash -c "$CMD"

      - name: Run Test Cases
        run: |
          echo "Running actual test cases using image ${{ env.IMAGE }}:${{ env.VERSION }}..."

          CMD="robot --outputdir /app/output/run -v BROWSER:${{ env.BROWSER }}"

          if [[ -n "${{ env.TAGS }}" ]]; then
            CMD="$CMD --include ${{ env.TAGS }}"
          fi

          if [[ -n "${{ env.EXCLUDE_TAGS }}" ]]; then
            CMD="$CMD --exclude ${{ env.EXCLUDE_TAGS }}"
          fi

          CMD="$CMD /app"
          echo "Executing test command: $CMD"

          docker run --rm -v ${PWD}:/app ${{ env.IMAGE }}:${{ env.VERSION }} bash -c "$CMD"

      - name: Archive Test Logs - Dryrun
        uses: actions/upload-artifact@v4
        with:
          name: dryrun-logs
          path: output/dryrun/
          retention-days: 3

      - name: Archive Test Logs - Run
        uses: actions/upload-artifact@v4
        with:
          name: run-logs
          path: output/run/
          retention-days: 3

      - name: Publish HTML Reports as Artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: robot-test-reports
          path: output/run/report.html
          retention-days: 3

      - name: Deploy Report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./output/run
          publish_branch: gh-pages
          force_orphan: true
          commit_message: Deploy Robot Framework report [skip ci]
          allow_empty_commit: false
          keep_files: false
          enable_jekyll: false
          exclude_assets: .github

      - name: Output GitHub Pages Report Link
        if: always()
        run: |
          REPORT_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/log.html"
          echo "👉 View the test report live at: $REPORT_URL"
          echo "## ✅ [Click here to view Robot Framework Test Report📊❎]($REPORT_URL)" >> $GITHUB_STEP_SUMMARY
