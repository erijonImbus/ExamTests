name: Robot Framework Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 */3 * * 1-5"  # Runs every 3 hours, Monday through Friday

  workflow_dispatch:
    inputs:
      TAGS:
        description: 'Tags to include in the tests'
        required: false
        default: ''
      EXCLUDE_TAGS:
        description: 'Tags to exclude from the tests'
        required: false
        default: ''
      BROWSER:
        description: 'Select the browser to run tests on'
        required: true
        type: choice
        options:
          - headlesschrome
          - firefox
          - edge
        default: headlesschrome

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      IMAGE: robotframework-docker-test
      VERSION: 1.0
      BROWSER: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.BROWSER || 'headlesschrome' }}
      TAGS: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.TAGS || '' }}
      EXCLUDE_TAGS: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.EXCLUDE_TAGS || '' }}


    steps:
      # Checkout the repository to get the latest code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up Docker
      - name: Set Up Docker
        run: |
          echo "Checking Docker installation..."
          docker version

      # Build Docker Image from Dockerfile
      - name: Build Docker Image
        run: |
          echo "Building Docker image from Dockerfile..."
          docker build -t ${{ env.IMAGE }}:${{ env.VERSION }} -f .github/workflows/Dockerfile .

      # Run the tests in dryrun mode using the built Docker image
      - name: Run Tests - Dryrun
        run: |
          echo "Running tests in dryrun mode using image ${{ env.IMAGE }}:${{ env.VERSION }}..."
          if [[ -z "${{ env.TAGS }}" && -z "${{ env.EXCLUDE_TAGS }}" ]]; then
            docker run --rm -v ${PWD}:/app ${{ env.IMAGE }}:${{ env.VERSION }} bash -c "
              robot --dryrun --outputdir /app/output/dryrun /app
            "
          else
            docker run --rm -v ${PWD}:/app ${{ env.IMAGE }}:${{ env.VERSION }} bash -c "
              robot --dryrun --outputdir /app/output/dryrun --include ${TAGS} --exclude ${EXCLUDE_TAGS} /app
            "
          fi

      # Run the actual test cases using the built Docker image
      - name: Run Test Cases
        run: |
          echo "Running actual test cases using image ${{ env.IMAGE }}:${{ env.VERSION }}..."
          docker run --rm -v ${PWD}:/app ${{ env.IMAGE }}:${{ env.VERSION }} bash -c "
            robot --outputdir /app/output/run -v BROWSER:${{ env.BROWSER }} --include ${TAGS} --exclude ${EXCLUDE_TAGS} /app
          "

      # Archive the Dryrun test logs
      - name: Archive Test Logs - Dryrun
        uses: actions/upload-artifact@v4
        with:
          name: dryrun-logs
          path: output/dryrun/

      # Archive the Run test logs
      - name: Archive Test Logs - Run
        uses: actions/upload-artifact@v4
        with:
          name: run-logs
          path: output/run/

      # Publish the HTML reports from the Run test logs
      - name: Publish HTML Reports
        uses: actions/upload-artifact@v4
        with:
          name: robot-test-reports
          path: output/run/report.html
